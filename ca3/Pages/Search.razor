@page "/search"
@using Newtonsoft.Json.Linq;
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Buttons

<h3>Search for Company</h3>

<div class="" style="border-color:black; border-radius:10px">
    <input @bind-value="@CurrencySearch" />
    <SfButton OnClick="TheButtonClicked" class="btn btn-primary">Search</SfButton>

    <SfGrid DataSource="@ListCurrency" AllowPaging="true">
        <GridColumns>
            <GridColumn Field=@nameof(Currencycon.CoinName) HeaderText="Coin"></GridColumn>
            <GridColumn Field=@nameof(Currencycon.CoinAmount) HeaderText="Amount"></GridColumn>

        </GridColumns>
    </SfGrid>

</div>



@code {


    string CurrencySearch = "";
    JObject jsonObj = new JObject();
    Dictionary<string, string> DictObj = new Dictionary<string, string>();

    public List<Currencycon> ListCurrency { get; set; }

   @* protected override void OnInitialized()
    {
        this.ListCurrency = new List<Currencycon>();

        for (int i = 0; i < 15; i++)
        {
            Currencycon CurCoin = new Currencycon();

            CurCoin.CoinName = "test";
            CurCoin.CoinAmount = "test";

            this.ListCurrency.Add(CurCoin);

        }

    }*@


    private async void TheButtonClicked()
    {
        try
        {
            HttpClient clnt = new HttpClient();

            String jsonString = await clnt.GetStringAsync("https://cdn.jsdelivr.net/gh/fawazahmed0/currency-api@1/latest/currencies/" + CurrencySearch + ".json");
            JObject jsonObj = JObject.Parse(jsonString);
            jsonObj.Remove("date");

            DictObj = jsonObj[CurrencySearch].ToObject<Dictionary<string, string>>();

            Change(DictObj);

        }
        catch (Exception)
        {


        }
    }

    public void Change(Dictionary<string, string> dictObj)
    {
        Console.WriteLine("changing..");
        List<Currencycon> tempList = new List<Currencycon>();
     
        foreach (var item in dictObj)
        {
            Currencycon CurCoin = new Currencycon();

            CurCoin.CoinName = item.Key;
            CurCoin.CoinAmount = item.Value;

            tempList.Add(CurCoin);
        }

        this.ListCurrency = tempList;
        StateHasChanged();
    }


}
