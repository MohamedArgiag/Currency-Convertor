@page "/search"
@using Newtonsoft.Json.Linq;
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.DropDowns

<link href="./css/StyleSheet.css" rel="stylesheet" />

<h3 class="text-center mt-5">Search for Company</h3>

<div class="container">
    <SfAutoComplete TValue="string" TItem="TickName" Placeholder="e.g. Euro" @bind-Value="@AutoVal" DataSource="@coinList">
        <AutoCompleteFieldSettings Value="CurName"></AutoCompleteFieldSettings>
        <div class=" text-center mt-5">
            <SfButton CssClass="e-custom" OnClick="TheButtonClicked" class="btn btn-primary">Search</SfButton>
        </div>
    </SfAutoComplete>



    <div class="mt-5" style="border-color:black; border-radius:10px">

        <SfGrid DataSource="@ListCurrency" AllowPaging="true">
            <GridColumns>
                <GridColumn Field=@nameof(Currencycon.CoinName) HeaderText="Currency(Ticker)"></GridColumn>
                <GridColumn Field=@nameof(Currencycon.CoinAmount) HeaderText="Value"></GridColumn>

            </GridColumns>
        </SfGrid>

    </div>
</div>



@code {
    public string AutoVal;
    Dictionary<string, string> dictSearch = new Dictionary<string, string>();
    List<TickName> coinList = new List<TickName>();


    protected async override void OnInitialized()
    {
        HttpClient clnt = new HttpClient();
        String searchJsonString = await clnt.GetStringAsync("https://cdn.jsdelivr.net/gh/fawazahmed0/currency-api@1/latest/currencies.json");
        JObject jsonObj = JObject.Parse(searchJsonString);

        dictSearch = jsonObj.ToObject<Dictionary<string, string>>();

        foreach (var item in dictSearch)
        {
            TickName CurCoin = new TickName();

            CurCoin.Tikr = item.Key;
            CurCoin.CurName = item.Value;

            coinList.Add(CurCoin);
        }
    }


    string CurrencySearch = "";
    JObject jsonObj = new JObject();
    Dictionary<string, string> DictObj = new Dictionary<string, string>();

    public List<Currencycon> ListCurrency { get; set; }


    private async void TheButtonClicked()
    {
        foreach (var item in dictSearch)
        {
            if (item.Value == AutoVal)
            {
                CurrencySearch = item.Key;
            }
        }

        try
        {
            HttpClient clnt = new HttpClient();
            String jsonString = await clnt.GetStringAsync("https://cdn.jsdelivr.net/gh/fawazahmed0/currency-api@1/latest/currencies/" + CurrencySearch + ".json");
            JObject jsonObj = JObject.Parse(jsonString);
            jsonObj.Remove("date");

            DictObj = jsonObj[CurrencySearch].ToObject<Dictionary<string, string>>();

            Change(DictObj);

        }
        catch (Exception)
        {


        }
    }

    public void Change(Dictionary<string, string> dictObj)
    {
        List<Currencycon> tempList = new List<Currencycon>();
        foreach (var item in dictObj)
        {
            Currencycon CurCoin = new Currencycon();

            CurCoin.CoinName = item.Key;
            CurCoin.CoinAmount = item.Value;

            tempList.Add(CurCoin);
        }
        this.ListCurrency = tempList;
        StateHasChanged();
    }
}
